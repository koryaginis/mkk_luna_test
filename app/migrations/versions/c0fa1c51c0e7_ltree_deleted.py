"""ltree deleted

Revision ID: c0fa1c51c0e7
Revises: b48c23d6e964
Create Date: 2025-10-28 10:48:30.063201

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = 'c0fa1c51c0e7'
down_revision: Union[str, Sequence[str], None] = 'b48c23d6e964'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_model')
    op.alter_column('activities', 'path',
               existing_type=sqlalchemy_utils.types.ltree.LtreeType(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("('newborn'::ltree || ((nextval('path_id_seq'::regclass))::text)::ltree)"))
    op.drop_constraint(op.f('activities_path_key'), 'activities', type_='unique')
    op.drop_column('activities', '_path_id')
    op.drop_column('activities', 'node_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activities', sa.Column('node_name', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('activities', sa.Column('_path_id', sa.BIGINT(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('activities_path_key'), 'activities', ['path'], postgresql_nulls_not_distinct=False)
    op.alter_column('activities', 'path',
               existing_type=sa.String(),
               type_=sqlalchemy_utils.types.ltree.LtreeType(),
               existing_nullable=False,
               existing_server_default=sa.text("('newborn'::ltree || ((nextval('path_id_seq'::regclass))::text)::ltree)"))
    op.create_table('test_model',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('test_model_pkey'))
    )
    # ### end Alembic commands ###
